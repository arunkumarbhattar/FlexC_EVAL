helpnode "Mcrypt help\nUsage : mcrypt [options] file1 file2 ..."

#int quiet;
option (V, verbose) { $quiet = 0 } "some more information is displayed."
option (q, quiet) { $quiet = 2 } "suppress some non critical warnings."

#int force;
option (F, force) { $force = 1 } "forces output to stdout."

#int real_random_flag;
option (r, random) { $real_random_flag = 1 } "Use real random data (if your system supports it)."

#int bare_flag;
option (b, bare) { $bare_flag = 1 } "Do not keep algorithm information in the encrypted"
                               "file."
#int gzipflag;
option (z, gzip) { $gzipflag = 1 } "Compress before encryption."

#int bzipflag;
option (p, bzip2) { $bzipflag = 1 } "Compress before encryption."

#int nolock;
option (n, nolock) { $nolock = 1 } "Do not lock files."

#int noecho;
option (echo) { $noecho = 0 } "Echo asterisks."

#int noiv;
option (noiv) { $noiv = 1 } "Do not use IV."

#int nodelete;
option (nodelete) { $nodelete = 1 } "Do not delete the output file if decryption failed."


#int flush;
option (flush) { $flush = 1 } "Immediately flush the output"

#int double_check;
option (l, doublecheck) { $double_check = 1 } "Double check passwords."

#int din;
#int ein;
#int ed_specified;
option (d, decrypt) { $ed_specified=1; $din = 1; $ein=0; } "decrypts."

#int keysize;
option (s, keysize) INT "integer" { $keysize = $1 } "The algorithm's key size."

#char *algorithms_directory;
option (algorithms_directory) STR "algorithms_directory" { $algorithms_directory = $1 } "algorithms directory."

#char *modes_directory;
option (modes_directory) STR "modes_directory" { $modes_directory = $1 } "modes directory."


#char *kmode;
option (o, keymode) STR "kmode" { $kmode = $1 } "keyword mode."

#int unlink_flag;
option (u, unlink) { $unlink_flag = 1 } "unlink the input file after"
                                        "encryption/decryption."

#char *keyfile;
option (f, keyfile) STR "keyfile" { $keyfile = $1 } "file to read the keyword from."

#int config;
#char *config_file;
option (c, config) STR "config" { $config=1; if (@1==1) $config_file = $1 } "Use configuration file FILE."

#char *algorithm;
option (a, algorithm) STR "algorithm" { $algorithm = $1 } "specify the encryption and decryption algorithm."

#int keylen;
#char **keys;
option (k, key) *STR "key1 key2...keyN" { $keys = $1; $keylen = @1 } "specify the key(s)"



#char *mode;
option (m, mode) STR "mode" { $mode = $1 } "specify the encryption and decryption mode."
                                           "CBC, ECB or CFB. CBC is the default."

#char *hash;
option (h, hash) STR "hash" { $hash = $1 } "specify the hash algorithm to be used."
option (list) { print_list(); exit(0); } "Print a list of the supported algorithms  and modes."
option (keymodeslist) { print_keylist(); exit(0); } "Print a list of the supported key modes."
option (hashlist) { print_hashlist(); exit(0); } "Print a list of the supported hash algorithms."
option (help) { usage(); exit(0); } "prints this help"
option (v, version) { mcrypt_version(); exit(0); } "prints the version number"
option (L, license) { mcrypt_license(); exit(0); } "displays license information."

#int size;
#char **input;
rest optional *STR "file1 file2...fileN" { $input = $1; $size = @1 }

init { $force=0; $quiet=1; $real_random_flag=0; $config=0;
       $bare_flag = 0; $din = 0; $ein=1; $unlink_flag = 0;
       $kmode = NULL; $keylen=0; $gzipflag=0; $bzipflag=0;
       $keyfile=NULL; $algorithm=NULL; $keys=NULL; $noiv=0;
       $config_file=NULL; $mode=NULL; $input=NULL; $ed_specified=0;
       $double_check=0; $nolock=0; $noecho=1; $flush=0; $keysize=0;
       $algorithms_directory=NULL; $modes_directory=NULL; $nodelete=0;
       $hash=NULL }

INCOMP kf
INCOMP Vq
INCOMP zp
